name: Build Android APK

on:
  push:
    branches: [main, master]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Validate Supabase secrets
        run: |
          node -e "
          const url = '${{ secrets.SUPABASE_URL }}';
          const key = '${{ secrets.SUPABASE_ANON_KEY }}';
          
          console.log('üîç Validating Supabase secrets...');
          
          if (!url || url.length < 10) {
            console.error('‚ùå SUPABASE_URL is missing or invalid');
            process.exit(1);
          }
          if (!key || key.length < 10) {
            console.error('‚ùå SUPABASE_ANON_KEY is missing or invalid');
            process.exit(1);
          }
          
          console.log('‚úÖ SUPABASE_URL: ' + url.substring(0, 15) + '...' + url.slice(-10));
          console.log('‚úÖ SUPABASE_ANON_KEY: ' + key.substring(0, 10) + '...' + key.slice(-10));
          console.log('‚úÖ Secrets validation passed');
          "
      
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Generate env.js with Supabase credentials and API URLs
        run: |
          cat > env.js << 'EOF'
          export const SUPABASE_URL = "${{ secrets.SUPABASE_URL }}";
          export const SUPABASE_ANON_KEY = "${{ secrets.SUPABASE_ANON_KEY }}";
          export const SLEEP_API_URL = "${{ secrets.SLEEP_API_URL }}";
          EOF
          echo "‚úÖ Generated env.js with credentials and API URLs"
      
      - name: Setup Expo
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}
      
      - name: Generate Android files
        run: npx expo prebuild --platform android --clean
      
      - name: Copy Kotlin native service files
        run: |
          echo "üìã Copying Kotlin native service files..."
          DEST_DIR="android/app/src/main/java/com/polarsensor/app"
          mkdir -p "$DEST_DIR"
          cp native-templates/android/kotlin/*.kt "$DEST_DIR/"
          echo "‚úÖ Copied Kotlin files to $DEST_DIR"
          ls -la "$DEST_DIR"
      
      - name: Build APK
        run: |
          cd android
          chmod +x ./gradlew
          ./gradlew assembleRelease --no-daemon
      
      - name: Inspect APK bundle for credentials
        run: |
          echo "üîç Inspecting APK bundle for Supabase credentials..."
          
          # Extract the APK
          unzip -q android/app/build/outputs/apk/release/app-release.apk -d /tmp/apk-inspect
          
          # Find and check the main bundle
          BUNDLE=$(find /tmp/apk-inspect -name "index.android.bundle" | head -n 1)
          
          if [ -z "$BUNDLE" ]; then
            echo "‚ö†Ô∏è Could not find index.android.bundle in APK"
          else
            URL_FRAGMENT="${{ secrets.SUPABASE_URL }}"
            URL_FRAGMENT="${URL_FRAGMENT:0:20}"
            
            if grep -q "$URL_FRAGMENT" "$BUNDLE"; then
              echo "‚úÖ Supabase URL found in bundle"
            else
              echo "‚ùå Supabase URL NOT found in bundle - injection failed!"
              exit 1
            fi
          fi
      
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: android/app/build/outputs/apk/release/app-release.apk
          retention-days: 30
